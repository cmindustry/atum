<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <meta content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0" name="viewport" />
    <meta name="keywords" content="<%- theme.keywords %>" />
    <title>
        <%= config.title %>
    </title>
    <!-- favicon -->
    <% if (theme.favicon){ %>
        <link rel="icon" href="<%- theme.favicon %>" />
        <% } %>
            <%- css('css/style.css') %>

                <!-- highlight -->
                <!-- <link rel="stylesheet" href="https://cdn.bootcss.com/highlight.js/10.4.1/styles/github-gist.min.css" />
                <script src="//cdn.bootcss.com/highlight.js/10.4.1/highlight.min.js"></script>
                <script>
                    hljs.initHighlightingOnLoad()
                </script> -->


                <script src="/js/hexo-infinite-scroll/dist/main.js"></script>

                <script>
                    infiniteScroll()

                    window.addEventListener('DOMContentLoaded', function() {
                        const [
                            mainTitle,
                            mobileMenu,
                            mobileMainTitle,
                            mobileMenuBtn,
                            ipadMenuBtn,
                            aside,
                            closeBtn,
                        ] = getEle(
                            '#main-title',
                            '.mobile-menu',
                            '.mobile-menu h3',
                            '.mobile-menu button',
                            '.ipad-menu',
                            'aside',
                            'aside .close',
                        )
                        const io = new IntersectionObserver(entries => {
                            if (entries[0].intersectionRatio <= 0) {
                                mobileMainTitle.classList.remove('invisibile')
                            } else {
                                mobileMainTitle.classList.add('invisibile')
                            }
                        })
                        io.observe(mainTitle)

                        clickToggleAside(mobileMenuBtn)
                        clickToggleAside(ipadMenuBtn)
                        clickToggleAside(closeBtn, false)

                        const isMenuVisible = window.getComputedStyle(mobileMenu).display !== 'none'
                        if (isMenuVisible) document.body.style.background = 'none'

                        function getEle(...args) {
                            return args.map(arg => document.querySelector(arg))
                        }

                        function clickToggleAside(btn, show = true) {
                            btn.addEventListener('click', function() {
                                if (show) {
                                    aside.style.display = 'block'
                                } else {
                                    aside.style.display = 'none'
                                }
                            })
                        }
                    })
                </script>
</head>